options {
        directory           	"/etc/named/";
        # Close recursion
        recursion               no;
        # Close fetch-glue
        fetch-glue              no;
        # Hide version
        version                 "Unknown";
        listen-on port 53   	{ any; };
        max-recursion-queries 	200;
        dump-file       	"/etc/named/data/cache_dump.db";
        statistics-file 	"/etc/named/data/named_stats.txt";
        allow-query     	{ any; };
        blackhole       	{ none; };
};

#rndc

#statistics

#logging
logging {
    channel default_log {
        file "/var/log/bind/named.log" versions 10 size 200m;
        severity dynamic;
        print-category yes;
        print-severity yes;
        print-time yes;
    };
    channel query_log {
        file "/var/log/bind/query.log" versions 10 size 200m;
        severity dynamic;
        print-category yes;
        print-severity yes;
        print-time yes;
    };
    channel resolver_log {
        file "/var/log/bind/resolver.log" versions 10 size 200m;
        severity dynamic;
        print-category yes;
        print-severity yes;
        print-time yes;
    };
    category default {default_log;};
    category queries {query_log;};
    category query-errors {query_log;};
    category resolver {resolver_log;};
    category lame-servers {null;};
    category edns-disabled {null;};
};

view "ours_domain" {
        match-clients           { any; };
        allow-query-cache       { any; };
        allow-recursion         { any; };
        allow-transfer          { none; };

        dlz "Mysql Zone" {
   		database "mysql
        {${MYSQL_DATA_SOURCE}}
   		{select zone from dns_records where zone = '$zone$'}
   		{select ttl, type, mx_priority, case when lower(type)='txt' then concat('\"', data, '\"')
        		when lower(type) = 'soa' then concat_ws(' ', data, resp_person, serial, refresh, retry, expire, minimum)
        		else data end from dns_records where zone = '$zone$' and host = '$record$'}";
	};

    zone "."  IN {
        type hint;
        file "named.ca";
    };
};
